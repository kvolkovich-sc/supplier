#!/bin/sh

####################################################################
###                  DISCOVERING DOCKERHOST IP                   ###
####################################################################
### NOTE: Consul must be accessible on a network the service is  ###
###       on. Consul and services are located on different       ###
###       netwoks due to different value of "network_mode"       ###
###       parameter ("host" for consul and "bridge" as default   ###
###       value for services).  Therefore consul client address  ###
###       must include the host's interface on services' network ###
###       which also serves as the network's gateway.  It is     ###
###       accomplished by running consul with -client=0.0.0.0    ###
###       which binds to all host's interfaces including the one ###
###       on services' network.  The gateway IP address must be  ###
###       discovered at each service startup and aliased to      ###
###       "dockerhost" in /etc/hosts                             ###
####################################################################

SED="$(which sed)"
NETSTAT="$(which netstat)"
GREP="$(which grep)"
AWK="$(which awk)"
CAT="$(which cat)"

$SED '/dockerhost$/d' /etc/hosts > /etc/hosts.tmp
DOCKERHOST="$($NETSTAT -nr | $GREP '^0\.0\.0\.0' | $AWK '{print $2}')"

echo "$DOCKERHOST dockerhost" >> /etc/hosts.tmp

$CAT /etc/hosts.tmp > /etc/hosts

rm -rf /etc/hosts.tmp

####################################################################
###           WAITING FOR DB START AND INITIALIZATION            ###
####################################################################
### NOTE: delete the block after docker-compose respects         ###
###       Dockerfile's HEALTHCHECK param.                        ###
####################################################################

db_host="$1"
shift
cmd="$@"

while ! mysqladmin ping -h "$db_host" --silent; do
  >&2 echo "MySQL is unavailable - sleeping ..."
  sleep 1
done

>&2 echo "MySQL is up - executing command"

if [ $(uname -m) == 'x86_64' ]; then
  mv '/usr/local/bin/jq-linux64' '/usr/local/bin/jq'
else
  mv '/usr/local/bin/jq-linux32' '/usr/local/bin/jq'
fi

####################################################################
### EXTRACTING FROM CONSUL NECESSARY INFO ABOUT REQURED SERVICES ###
####################################################################
### NOTE: Consul requests must be conducted only after DB start  ###
###       and initialization.                                    ###
####################################################################

while : ; do
  db_service_info="$(curl -ssf http://dockerhost:8500/v1/catalog/service/mysql)"
  [[ "$db_service_info" == "[]" ]] || break
  sleep 1
done

export DB_HOST="$(curl -ssf http://dockerhost:8500/v1/catalog/service/mysql | jq -crM '.[0].ServiceAddress')"
export DB_PORT=$(curl -ssf http://dockerhost:8500/v1/catalog/service/mysql | jq -crM '.[0].ServicePort')

# "exec" will replace the shell without creating a new process => $cmd will get PID 1
# (and SIGTERM when a docker container stops as a result).
exec $cmd
