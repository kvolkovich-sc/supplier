machine:
  pre:
   - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
   - pip install --force-reinstall -U docker-compose==1.10.0
   - cd supplier ; rm -Rf wiki ; git clone https://github.com/OpusCapita/supplier.wiki.git wiki
  services:
    - docker

dependencies:
  override:
    - docker info
    - >
      if [ -n "${RUN_NIGHTLY_BUILD}" ]; then
        echo "running base img build..." && docker build --rm=false -t opuscapita/supplier-base:latest -f Dockerfile.base .
      fi
    - docker build --rm=false -t opuscapita/supplier:latest .

test:
  override:
    - >
      sudo service mysql stop ;
      export HOST_IP=$(ifconfig | grep "docker0" -A1 | grep -o -P "inet addr:.*? " | grep -o -P "\d+\.\d+\.\d+\.\d+") ;
      docker-compose run main npm run test
  post:
    - sudo mkdir $CIRCLE_TEST_REPORTS/junit
    - sudo cp test-results.xml $CIRCLE_TEST_REPORTS/junit

deployment:
  development:
    branch: develop
    commands:
      - docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      - docker tag opuscapita/supplier:latest opuscapita/supplier:dev
      - docker push opuscapita/supplier:dev
      - curl https://raw.githubusercontent.com/gr4per/azureswarm/master/deploy_service.sh > deploy_service.sh
      - chmod +x deploy_service.sh
      - ./deploy_service.sh dm 52.233.155.169 opuscapita/supplier dev
  production:
    branch: master
    commands:
      - docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      - >
        if [ -n "${RUN_NIGHTLY_BUILD}" ]; then
          echo "running base img deploy..." && docker push opuscapita/supplier-base:latest
        fi
      - docker push opuscapita/supplier
      - docker-compose run main npm run doc
      - cd wiki ; git add --all . ; git commit -am 'Updated documentation.' ; git push ; (exit 0)
      - chmod +x deploy.sh
      - ./deploy.sh
